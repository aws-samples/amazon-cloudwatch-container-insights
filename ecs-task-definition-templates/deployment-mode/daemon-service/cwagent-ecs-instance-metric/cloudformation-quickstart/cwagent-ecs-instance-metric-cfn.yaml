AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ClusterName:
    Type: String
    Description: Enter the name of your ECS cluster from which you want to collect metrics
  CreateIAMRoles:
    Type: String
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
    Description: Whether to create default IAM roles
    ConstraintDescription: must specify True or False.
  EnableLogCollection:
    Type: String
    Default: 'False'
    AllowedValues:
      - 'True'
      - 'False'
    Description: Whether to enable instance log collection
    ConstraintDescription: must specify True or False.
  TaskRoleArn:
    Type: String
    Default: Default
    Description: Enter the role arn you want to use as the ecs task role
  ExecutionRoleArn:
    Type: String
    Default: Default
    Description: Enter the role arn you want to use as the ecs execution role
Conditions:
  LogCollection: !Equals
    - !Ref EnableLogCollection
    - 'True'
  CreateRoles: !Equals
    - !Ref CreateIAMRoles
    - 'True'
  DefaultTaskRole: !Equals
    - !Ref TaskRoleArn
    - Default
  DefaultExecutionRole: !Equals
    - !Ref ExecutionRoleArn
    - Default
Resources:
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ecs-cwagent-daemon-service
      TaskRoleArn: !If
        - CreateRoles
        - !GetAtt ECSTaskRole.Arn
        - !If
          - DefaultTaskRole
          - !Sub arn:aws:iam::${AWS::AccountId}:role/CWAgentECSTaskRole
          - !Ref TaskRoleArn
      ExecutionRoleArn: !If
        - CreateRoles
        - !GetAtt ECSExecutionRole.Arn
        - !If
          - DefaultExecutionRole
          - !Sub arn:aws:iam::${AWS::AccountId}:role/CWAgentECSExecutionRole
          - !Ref ExecutionRoleArn
      NetworkMode: bridge
      ContainerDefinitions:
        - Name: cloudwatch-agent
          Image: public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.300032.3b392
          MountPoints:
            - ReadOnly: true
              ContainerPath: /rootfs/proc
              SourceVolume: proc
            - ReadOnly: true
              ContainerPath: /rootfs/dev
              SourceVolume: dev
            - ReadOnly: true
              ContainerPath: /sys/fs/cgroup
              SourceVolume: al2_cgroup
            - ReadOnly: true
              ContainerPath: /cgroup
              SourceVolume: al1_cgroup
            - ReadOnly: true
              ContainerPath: /rootfs/sys/fs/cgroup
              SourceVolume: al2_cgroup
            - ReadOnly: true
              ContainerPath: /rootfs/cgroup
              SourceVolume: al1_cgroup
            - !If 
              - LogCollection
              - ReadOnly: true
                ContainerPath: /instance-logs
                SourceVolume: instance_logs
              - !Ref AWS::NoValue
          Environment:
            - !If 
              - LogCollection
              - !Ref AWS::NoValue
              - Name: USE_DEFAULT_CONFIG
                Value: 'True'
          Secrets:
            - !If 
              - LogCollection
              - Name: CW_CONFIG_CONTENT
                ValueFrom: !Sub
                - 'arn:${Partition}:ssm:${Region}:${AccountID}:parameter/${Parameter}'
                - Partition: !Ref AWS::Partition
                  Region: !Ref AWS::Region
                  AccountID: !Ref AWS::AccountId
                  Parameter: !Ref CloudWatchAgentConfigParam
              - !Ref AWS::NoValue
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: 'True'
              awslogs-group: /ecs/ecs-cwagent-daemon-service
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2
      Volumes:
        - Name: proc
          Host:
            SourcePath: /proc
        - Name: dev
          Host:
            SourcePath: /dev
        - Name: al1_cgroup
          Host:
            SourcePath: /cgroup
        - Name: al2_cgroup
          Host:
            SourcePath: /sys/fs/cgroup
        - !If 
          - LogCollection
          - Name: instance_logs
            Host:
              SourcePath: /var/log
          - !Ref AWS::NoValue
      Cpu: '128'
      Memory: '64'
  ECSDaemonService:
    Type: AWS::ECS::Service
    Properties:
      TaskDefinition: !Ref ECSTaskDefinition
      Cluster: !Ref ClusterName
      LaunchType: EC2
      SchedulingStrategy: DAEMON
      ServiceName: cwagent-daemon-service
  ECSTaskRole:
    Type: AWS::IAM::Role
    Condition: CreateRoles
    Properties:
      Description: Allows ECS tasks to call AWS services on your behalf.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      RoleName: !Join
        - '-'
        - - 'ecs'
          - !Ref ClusterName
          - 'cw-agent-task-role'
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Condition: CreateRoles
    Properties:
      Description: Allows ECS container agent makes calls to the Amazon ECS API on your behalf.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      RoleName: !Join
        - '-'
        - - 'ecs'
          - !Ref ClusterName
          - 'cw-agent-execution-role'
  CWAgentSSMParamIAMPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: LogCollection
    Properties:
      Roles:
          - !Ref ECSExecutionRole
      PolicyName: !Join
        - '-'
        - - 'ecs'
          - !Ref ClusterName
          - 'cw-agent-ssm-param-access-policy'
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'ssm:GetParameters'
            Resource: !Sub
              - 'arn:${Partition}:ssm:${Region}:${AccountID}:parameter/${Parameter}'
              - Partition: !Ref AWS::Partition
                Region: !Ref AWS::Region
                AccountID: !Ref AWS::AccountId
                Parameter: !Ref CloudWatchAgentConfigParam
  CloudWatchAgentConfigParam:
    Type: AWS::SSM::Parameter
    Condition: LogCollection
    Properties:
      Name: !Join
        - '-'
        - - 'ecs-cloudwatch-agent'
          - !Ref ClusterName
      Type: String
      Value: !Sub |
        {
            "logs": {
                "logs_collected": {
                    "files": {
                        "collect_list": [
                            {
                                "file_path": "/instance-logs/ecs/ecs-agent.log",
                                "log_group_name": "/aws/ecs/containerinsights/${ClusterName}/instance",
                                "log_stream_name": "{instance_id}_ecs-agent"
                            },
                            {
                                "file_path": "/instance-logs/ecs/audit.log",
                                "log_group_name": "/aws/ecs/containerinsights/${ClusterName}/instance",
                                "log_stream_name": "{instance_id}_audit.log"
                            },
                            {
                                "file_path": "/instance-logs/ecs/ecs-init.log",
                                "log_group_name": "/aws/ecs/containerinsights/${ClusterName}/instance",
                                "log_stream_name": "{instance_id}_ecs-init.log"
                            },
                            {
                                "file_path": "/instance-logs/messages",
                                "log_group_name": "/aws/ecs/containerinsights/${ClusterName}/instance",
                                "log_stream_name": "{instance_id}_messages"
                            }
                        ]
                    }
                }
            }
        }
      Description: SSM Parameter for CloudWatch Agent configuration in ECS